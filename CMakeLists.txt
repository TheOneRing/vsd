project( VSD )
cmake_minimum_required(VERSION 2.8.12)

add_definitions(-DUNICODE -D_UNICODE  -D_CRT_RAND_S -D_WIN32_WINNT=0x0600)
if(MSVC)
    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
endif(MSVC)
if(MINGW)
    add_definitions(-DMINGW_HAS_SECURE_API)
endif(MINGW)

option(STATIC_VSD "Build libvsd static" ON)

if(STATIC_VSD)
    add_definitions(-DLIBVSD_STATIC)
    set(LIBVSD_BUILDTYPE STATIC)

    if(MINGW)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG -DQT_NO_DEBUG")
set(CMAKE_CXX_FLAGS_RELEASE        "-O3 -DNDEBUG -DQT_NO_DEBUG")
set(CMAKE_CXX_FLAGS_DEBUG          "-g -O2 -fno-reorder-blocks -fno-schedule-insns -fno-inline")
set(CMAKE_CXX_FLAGS_DEBUGFULL      "-g3 -fno-inline")
set(CMAKE_CXX_FLAGS_PROFILE        "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-O2 -g -DNDEBUG -DQT_NO_DEBUG")
set(CMAKE_C_FLAGS_RELEASE          "-O2 -DNDEBUG -DQT_NO_DEBUG")
set(CMAKE_C_FLAGS_DEBUG            "-g -O2 -fno-reorder-blocks -fno-schedule-insns -fno-inline")
set(CMAKE_C_FLAGS_DEBUGFULL        "-g3 -fno-inline")
set(CMAKE_C_FLAGS_PROFILE          "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wnon-virtual-dtor -Wno-long-long -ansi -Wundef -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -Wformat-security -fno-exceptions -fno-check-new -fno-common -std=c++11")

        set(CMAKE_EXE_LINKER_FLAGS ${MAKE_EXE_LINKER_FLAGS} -static )
    endif(MINGW)
    
    if(MSVC)
        foreach(_bt DEBUG RELEASE RELWITHDEBINFO)
            string(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_${_bt} ${CMAKE_CXX_FLAGS_${_bt}})
        endforeach(_bt DEBUG RELEASE RELWITHDEBINFO)
    endif(MSVC)
else(STATIC_VSD)
    set(LIBVSD_BUILDTYPE SHARED)
endif(STATIC_VSD)

add_subdirectory(src)
